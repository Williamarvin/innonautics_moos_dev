//-------------------------------------------------
// NAME: mikedef
// FILE: meta_wamv.moos
//-------------------------------------------------

ServerHost   = localhost
ServerPort   = $(MOOS_PORT)  // 9001
Community    = $(VNAME)  // WAMV
MOOSTimeWarp = 1

//MIT Sailing
LatOrigin = 42.358436
LongOrigin = -71.087448


//------------------------------------------
// Antler configuration  block
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  // MOOS Essentials
  Run = MOOSDB        @ NewConsole = false
  Run = pLogger       @ NewConsole = false
  Run = pNodeReporter	@ NewConsole = false
  Run = uProcessWatch	@ NewConsole = false
  Run = pHostInfo      @NewConsole = false

  // Autonomy
  Run = pHelmIvP      @ NewConsole = false
  Run = pContactMgrV20 @NewConsole = false
  Run = pRealm	      @ NewConsole = false
  Run = pShare         @NewConsole = false
  Run = uFldNodeBroker @NewConsole = false
  Run = uFldMessageHandler @NewConsole = false
  //Run = pHVUProtectAssetCtrl   @ NewConsole = false

  // ROS
  //Run = iMOOSGateway  @ NewConsole = false

#ifdef XMODE SIM
	Run = pMarinePIDV22 @ NewConsole = false

#elseifdef XMODE WAMV
  Run = iActuationWAMV   @ NewConsole = false
  Run = pMarinePIDV22 @ NewConsole = false
#endif

#ifdef PERCEPTION yes
	Run pRadarToWorld @ NewConsole = false
	Run pLidarToWorld @ NewConsole = false
	Run pObstacleManager @ NewConsole = false
#endif

	// Pinger
#ifdef PINGER yes
	Run = iPSA9165Simple   @ NewConsole = false
#endif

}

#include plug_pHostInfo.moos
#include plug_uFldMessageHandler.moos
#include plug_uFldNodeBroker.moos

//---------------------------------------------------------
// pShare Config Block  (Created from Plugin)

ProcessConfig = pShare
{
  AppTick    = 2
  CommsTick  = 2

	input = route =  localhost:$(PSHARE_PORT)
	//input = route =  $(HOST_IP):$(PSHARE_PORT)&localhost:9302
	//input = route =  $(HOST_IP):$(PSHARE_PORT)&$(AUX_IP):$(AUX_PSHARE)

	//output = src_name=DESIRED_*, dest_name=$(VNAME)_, route=$(HOST_IP):$(PSHARE_PORT)
	//output = src_name=NODE_REPORT_LOCAL*, dest_name=$(VNAME)_, route=$(HOST_IP):$(PSHARE_PORT)
	//output = src_name=COMMANDED_THRUST_*, dest_name=$(VNAME)_, route=$(HOST_IP):$(PSHARE_PORT)
}

//--------------------------------------------------------
// pBasicContactMgr Configuration Block
//  from:  m2_berta_detect
ProcessConfig = pContactMgrV20
{
  AppTick   = 2
  CommsTick = 2

  decay = 30,60

  alert_verbose = true

  contact_max_age = 3600
  display_radii   = false

  alert_range_color = gray70
  cpa_range_color   = gray30
}

//------------------------------------------
// pLogger config block

ProcessConfig = pLogger
{
  AppTick   = 8
  CommsTick = 8
	Path = ./logs/
	File = LOG_$(VNAME)
  AsyncLog = true

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC
  Log = REPORT @ 0 NOSYNC
  Log = BHV_SETTINGS @ 0 NOSYNC

  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = DB_VARSUMMARY
  WildCardOmitPattern = DB_RWSUMMARY
  WildCardExclusionLog = true
}

//------------------------------------------
// uProcessWatch config block

ProcessConfig = uProcessWatch
{
  AppTick   = 4
  CommsTick = 4

  watch_all = true
	nowatch   = uPokeDB*
	nowatch   = uQueryDB*
	nowatch   = uXMS*
	nowatch   = uMS*
	nowatch   = uMAC*
}

//------------------------------------------
// iMOOSGateway config block

ProcessConfig = iMOOSGateway
{
  AppTick  	= 20
  CommsTick	= 20

	app_logging = true  // log
  tcp_port = $(G_PORT)  //Port is set in launch script for each vehicle

	// comma separated moos variables to send to client
	forward_to_client = DESIRED_RUDDER, DESIRED_THRUST, NAV_REPORT_RESPONSE

  // comma separated moos variables to block from client
  block_from_client = DEPLOY
}

//------------------------------------------
// pHelmIvP config block

ProcessConfig = pHelmIvP
{
  AppTick    = 4
  CommsTick  = 4

	//ivp_behavior_dir = /home/mikedef/moos-ivp-swarm/trunk/lib
	Verbose = false
  behaviors  = targ_$(VNAME).bhv
  domain     = course:0:359:360
  domain     = speed:0:5:41

	ok_skew=any
}

//------------------------------------------
// pNodeReporter config block

ProcessConfig = pNodeReporter
{
  AppTick    = 2
  CommsTick	 = 2

  platform_type   = $(VTYPE)
  platform_color  = red
  platform_length = 5

  //group       = blue_team


}

//-----------------------------------------------------
// pMarinePID settings
	ProcessConfig = pMarinePIDV22
{
  AppTick    = 10
  CommsTick  = 10

	app_logging = true
  deprecated_ok = true
  VERBOSE       = true
  DEPTH_CONTROL = false
  ACTIVE_START  = false

  // Yaw PID controller
  YAW_PID_KP             = 0.5
  YAW_PID_KD             = 0.05 // 0.00
  YAW_PID_KI             = 0.3 // 0.02
  YAW_PID_INTEGRAL_LIMIT = 0.07
	YAW_PID_KI_LIMIT = 0.2

  // Speed PID controller
  SPEED_PID_KP           = 1.0
  SPEED_PID_KD           = 0.0
  SPEED_PID_KI           = 0.0 //0.9
  SPEED_PID_INTEGRAL_LIMIT = 0.0

  // Maximums
  MAXRUDDER  = 180  // 30.0
  MAXTHRUST  = 1000  // Upper limit for Gazebo WAMV Thrust control 1400

  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  //SPEED_FACTOR = 20
}

// pObstacleMgr config block
ProcessConfig = pObstacleMgr
{
  AppTick = 15
  CommsTick = 15

  point_var = TRACKED_FEATURE

  max_pts_per_cluster = 100
  max_age_per_point = 3

  alert_range = 300

  ignore_range = 350
  //given_max_duration = off
  lasso = false
}


//------------------------------------------------
// uFldHVUProtectEval config block

ProcessConfig = pHVUProtectAssetCtrl
{
   AppTick   = 4
   CommsTick = 4

   intruder_names = bad_guy1,ike,jim,fin,ned
         hvu_name = WAMV  // app gets ownship info from own node report

   post_fake_hvu_node_report = false

   //pursuit_trigger_region = format=ellipse, x=80, y=-180, major=420, minor=320, degs=25.0, pts=20, snap=0.1, label=trigger_region
   pursuit_trigger_region = format=ellipse, x=60, y=-135, major=310, minor=235, degs=25.0, pts=20, snap=0.1, label=trigger_region
   
}